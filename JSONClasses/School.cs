// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SPBDnevnik.JSONClasses;
//
//    var topLevel = TopLevel.FromJson(jsonString);

namespace SPBDnevnik.JSONClasses
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    using System;
    using System.Collections.Generic;
    using System.Globalization;

    public partial class School
    {
        [JsonProperty("data")]
        public Data Data { get; set; }

        [JsonProperty("validations")]
        public List<object> Validations { get; set; }

        [JsonProperty("messages")]
        public List<object> Messages { get; set; }

        [JsonProperty("debug")]
        public List<object> Debug { get; set; }
    }

    public partial class Data
    {
        [JsonProperty("items")]
        public List<Item> Items { get; set; }

        [JsonProperty("before")]
        public long Before { get; set; }

        [JsonProperty("current")]
        public long Current { get; set; }

        [JsonProperty("last")]
        public long Last { get; set; }

        [JsonProperty("next")]
        public long Next { get; set; }

        [JsonProperty("total_pages")]
        public long TotalPages { get; set; }

        [JsonProperty("total_items")]
        public long TotalItems { get; set; }
    }

    public partial class Item
    {
        [JsonProperty("identity")]
        public Identity Identity { get; set; }

        [JsonProperty("number", NullValueHandling = NullValueHandling.Ignore)]
        public long? Number { get; set; }

        [JsonProperty("datetime_from", NullValueHandling = NullValueHandling.Ignore)]
        public string DatetimeFrom { get; set; }

        [JsonProperty("datetime_to", NullValueHandling = NullValueHandling.Ignore)]
        public string DatetimeTo { get; set; }

        [JsonProperty("subject_id", NullValueHandling = NullValueHandling.Ignore)]
        public long? SubjectId { get; set; }

        [JsonProperty("subject_name", NullValueHandling = NullValueHandling.Ignore)]
        public string SubjectName { get; set; }

        [JsonProperty("content_name", NullValueHandling = NullValueHandling.Ignore)]
        public string ContentName { get; set; }

        [JsonProperty("content_description")]
        public string ContentDescription { get; set; }

        [JsonProperty("content_additional_material")]
        public object ContentAdditionalMaterial { get; set; }

        [JsonProperty("tasks", NullValueHandling = NullValueHandling.Ignore)]
        public List<Task> Tasks { get; set; }

        [JsonProperty("estimates", NullValueHandling = NullValueHandling.Ignore)]
        public List<Estimate> Estimates { get; set; }

        [JsonProperty("educations", NullValueHandling = NullValueHandling.Ignore)]
        public List<Education> Educations { get; set; }

        [JsonProperty("action_payload", NullValueHandling = NullValueHandling.Ignore)]
        public ActionPayload ActionPayload { get; set; }

        [JsonProperty("firstname", NullValueHandling = NullValueHandling.Ignore)]
        public string Firstname { get; set; }

        [JsonProperty("surname", NullValueHandling = NullValueHandling.Ignore)]
        public string Surname { get; set; }

        [JsonProperty("middlename", NullValueHandling = NullValueHandling.Ignore)]
        public string Middlename { get; set; }

        [JsonProperty("hash_uid", NullValueHandling = NullValueHandling.Ignore)]
        public string HashUid { get; set; }

        public partial class Estimate
        {
            [JsonProperty("estimate_type_code")]
            public string EstimateTypeCode { get; set; }

            [JsonProperty("estimate_type_name")]
            public string EstimateTypeName { get; set; }

            [JsonProperty("estimate_value_code")]
            public string EstimateValueCode { get; set; }

            [JsonProperty("estimate_value_name")]
            public string EstimateValueName { get; set; }

            [JsonProperty("estimate_comment")]
            public object EstimateComment { get; set; }
        }
    }

    public partial class ActionPayload
    {
        [JsonProperty("can_apply_for_distance")]
        public bool CanApplyForDistance { get; set; }

        [JsonProperty("can_print")]
        public object CanPrint { get; set; }
    }

    public partial class Education
    {
        [JsonProperty("push_subscribe")]
        public bool PushSubscribe { get; set; }

        [JsonProperty("education_id")]
        public long EducationId { get; set; }

        [JsonProperty("group_id")]
        public long GroupId { get; set; }

        [JsonProperty("group_name")]
        public string GroupName { get; set; }

        [JsonProperty("institution_id")]
        public long InstitutionId { get; set; }

        [JsonProperty("institution_name")]
        public string InstitutionName { get; set; }

        [JsonProperty("jurisdiction_id")]
        public long JurisdictionId { get; set; }

        [JsonProperty("jurisdiction_name")]
        public string JurisdictionName { get; set; }

        [JsonProperty("is_active")]
        public object IsActive { get; set; }

        [JsonProperty("distance_education")]
        public bool DistanceEducation { get; set; }

        [JsonProperty("distance_education_updated_at")]
        public object DistanceEducationUpdatedAt { get; set; }

        [JsonProperty("parent_firstname")]
        public object ParentFirstname { get; set; }

        [JsonProperty("parent_surname")]
        public object ParentSurname { get; set; }

        [JsonProperty("parent_middlename")]
        public object ParentMiddlename { get; set; }

        [JsonProperty("parent_email")]
        public object ParentEmail { get; set; }
    }

    public partial class Identity
    {
        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("uid")]
        public object Uid { get; set; }
    }

    public partial class Task
    {
        [JsonProperty("task_name")]
        public string TaskName { get; set; }

        [JsonProperty("task_code")]
        public object TaskCode { get; set; }

        [JsonProperty("task_kind_code")]
        public string TaskKindCode { get; set; }

        [JsonProperty("task_kind_name")]
        public string TaskKindName { get; set; }

        [JsonProperty("files")]
        public List<File> Files { get; set; }
    }

    public partial class File
    {
        [JsonProperty("file_name")]
        public string FileName { get; set; }

        [JsonProperty("file_type")]
        public string FileType { get; set; }

        [JsonProperty("uuid")]
        public string Uuid { get; set; }
    }


    public static class Serialize
    {
        public static string ToJson(this School self) => JsonConvert.SerializeObject(self, SPBDnevnik.JSONClasses.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
